<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">
	<resultMap type="cProject.movie.vo.UserVO" id="userMap">
		<id property="id" column="id"/>
		<result property="pw" column="pw"/>
		<result property="email" column="email"/>
		<result property="nick" column="nick"/>
		<result property="userType" column="user_type"/>
		<result property="createDate" column="create_date"/>
		<result property="updateDate" column="update_date"/>
		<result property="deleteDate" column="delete_date"/>
		<result property="countTotal" column="count_total"/>
		<collection property="Bpolices" ofType="cProject.movie.vo.BpoliceVO">
			<id property="policeNo" column="police_no"/>
			<result property="id" column="id"/>
			<result property="bno" column="bno"/>
			<result property="policeDate" column="police_date"/>
			<result property="policeReason" column="police_reason"/>
			<result property="policeResult" column="police_result"/>
		</collection>
		<collection property="Cpolices" ofType="cProject.movie.vo.CpoliceVO">
			<id property="policeNo" column="police_no"/>
			<result property="id" column="id"/>
			<result property="cno" column="cno"/>
			<result property="policeDate" column="police_date"/>
			<result property="policeReason" column="police_reason"/>
			<result property="policeResult" column="police_result"/>
		</collection>
	</resultMap>
	
	<select id="login" parameterType="cProject.movie.vo.UserVO" resultMap="userMap">
		select id, user_type,nick from user where id = #{id} and pw = #{pw}
	</select>
	
	<insert id="join" parameterType="cProject.movie.vo.UserVO">
		insert into user(id, pw, email, nick)
		values(#{id}, #{pw}, #{email}, #{nick});
	</insert>
	
	<select id="idCheck" parameterType="String" resultType="Integer">
		select count(*) from user where id = #{id};
	</select>
	
	<select id="nickCheck" parameterType="String" resultType="Integer">
		select count(*) from user where nick = #{nick};
	</select>
	
	<select id="emailCheck" parameterType="String" resultType="Integer">
		select count(*) from user where email = #{email};
	</select>
	
	 <select id="findId" parameterType="String" resultMap="userMap">
        select id from user where email = #{email};
    </select>
    
    <select id="findPw" parameterType="cProject.movie.vo.UserVO" resultMap="userMap">
        SELECT id FROM user WHERE id = #{id} AND email = #{email}
    </select>

    <update id="changePw" parameterType="cProject.movie.vo.UserVO">
        UPDATE user SET pw = #{pw} WHERE id = #{id}
    </update>
    
    <update id="myChangePw" parameterType="cProject.movie.vo.UserVO">
        UPDATE user SET pw = #{pw} WHERE id = #{id}
    </update>
    
    <update id="changenick" parameterType="cProject.movie.vo.UserVO">
        UPDATE user SET nick = #{nick} WHERE id = #{id}
    </update>
    
    <update id="changeemail" parameterType="cProject.movie.vo.UserVO">
        UPDATE user SET email = #{email} WHERE id = #{id}
    </update>
    <select id="selectPolice" resultMap="userMap">
    	select user.id, nick from user
	    	left join bpolice on user.id = bpolice.id
	    	left join cpolice on user.id = cpolice.id
	  	<where>
	  		and user.id = bpolice.id or user.id = cpolice.id 
	  		<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
					and ${searchType} like concat('%',#{keyword},'%')
			</if>
	  	</where>
	    	
		limit #{offset}, #{limit}
    </select>
    
    <select id="upoliceCount" resultType="int">
		select count(*) from user 
	    	left join bpolice on user.id = bpolice.id
	    	left join cpolice on user.id = cpolice.id
		<where>
	  		and user.id = bpolice.id or user.id = cpolice.id 
		  	<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
						and ${searchType} like concat('%',#{keyword},'%')
			</if>
	  	</where>
	</select>
	<select id="offUser" resultMap="userMap">
		select * from user 
		<where>
			and user_type=2
			<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
				and ${searchType} like concat('%',#{keyword},'%')
			</if>
		</where>
		limit #{offset}, #{limit}
	</select>
	<select id="offUserCount" resultType="int">
		select count(*) from user
		<where>
			and user_type=2
			<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
				and ${searchType} like concat('%',#{keyword},'%')
			</if>
		</where>
	</select>
	<select id="policeUserTotal" resultMap="userMap">
			select user.id, nick,
			((select count(user.id)  from user inner join bpolice on user.id = bpolice.id where user.id = #{id})+(select count(user.id)  from user inner join cpolice on user.id = cpolice.id where user.id = #{id})) as count_total 
	    	from user where user.id = #{id};
	</select>
</mapper>